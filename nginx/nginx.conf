## /etc/nginx/nginx.conf
# config for use with https://github.com/winshining/nginx-http-flv-module

# run nginx as the www-data user
user www-data;

# set the number of workers equal to the cpu count
worker_processes 8;

# set the pid file location
pid /run/nginx.pid;

# set the maximum number of simultaneous connections
events {
  worker_connections 1024;
}

# configure http handling
http {
  # limit simultaneous connections to protect against slowloris attacks
  limit_conn_zone $binary_remote_addr zone=addr:10m;
  limit_conn addr 64;

  # handle file copying in kernelspace
  sendfile on;

  # delay sending packets until full
  tcp_nopush on;

  # enable asynchronous io
  aio on;

  # let nginx handle caching, instead of the os
  directio 512;

  # tell nginx what sort of content we'll be displaying
  include mime.types;
  charset UTF-8;
  default_type application/octet-stream;

  # set the default index file
  index index.html;

  # configure http listener
  server {
    # listen on only ipv4
    listen 80 default_server;

    # listen for all server names
    server_name _;

    # enable fancy indexing
    fancyindex on;
    fancyindex_exact_size off;

    # serve landing page
    index index.html;

    # set root directory
    root /var/www/html;

    # serve landing page, requesting html document, then uri, in that order
    # otherwise 404
    try_files $uri/index.html $uri.html $uri/ $uri =404;

    # set no-cache header
    add_header 'Cache-Control' 'no-cache';

    # serve hls streams
    location /hls {
      sub_filter "streamer" "$arg_host";
      index hls.html;
    }

    # serve dash streams
    location /dash {
      sub_filter "streamer" "$arg_host";
      index dash.html;
    }
  }
}

# configure rtmp handling
rtmp {
  # defaults from sample config
  out_queue           4096;
  out_cork            8;
  max_streams         128;
  timeout             15s;
  drop_idle_publisher 15s;
  log_interval        5s;
  log_size            1m;

  # configure rtmp listener
  server {
    # listen on the default port
    listen 1935;

    # send 500ms chunks of video
    chunk_size 4096;

    # create an application for http livestreaming
    application hls {
      # enables one-to-many broadcasting
      live on;

      # open GOP cache for reducing the wating time for the first picture of video
      gop_cache on;

      # enables http live streaming
      hls on;

      # sets path for hls fragments and playslists
      hls_path /var/www/html/hls;

      # allow stream resumption in the case of brief network loss
      hls_continuous on;

      # align fragment slicing to timestamps to allow reproducible fragmentation
      hls_fragment_slicing aligned;

      # set fragment length to 10 seconds
      hls_fragment 500ms;

      # remove old fragments and playlists
      hls_cleanup off;

      # set playlist length
      hls_playlist_length 6h;
    }

    # create an application for dash streams
    application dash {
      # enables one-to-many broadcasting
      live on;

      # open GOP cache for reducing the wating time for the first picture of video
      gop_cache on;

      # enable dash streaming
      dash on;

      # sets path for dash fragments
      dash_path /var/www/html/dash;
    }
  }
}
